void printCard(int cardInDeck, int index) {
	char pattern[3] = "";
	/*인덱스에 따라 문양 출력*/
	if (index < 13) strcpy_s(pattern, 3, "♠");
	else if (index < 26) strcpy_s(pattern, 3, "◆");
	else if (index < 39) strcpy_s(pattern, 3, "♣");
	else strcpy_s(pattern, 3, "♥");

	/*카드값 출력*/
	switch (cardInDeck) {
	case -1:
	case 1: {
		printf("\n");
		printf("┌──────────┐\n");
		printf("│%s        │\n", pattern);
		printf("│ %c        │\n", 'A');
		printf("│          │\n");
		printf("│          │\n");
		printf("│          │\n");
		printf("│         %c│\n", 'A');
		printf("│        %s│\n", pattern);
		printf("└──────────┘\n");
		break;
	}
	case 2:
	case 3:
	case 4:
	case 5:
	case 6:
	case 7:
	case 8:
	case 9: {
		printf("\n");
		printf("┌──────────┐\n");
		printf("│%s        │\n", pattern);
		printf("│ %d        │\n", cardInDeck);
		printf("│          │\n");
		printf("│          │\n");
		printf("│          │\n");
		printf("│         %d│\n", cardInDeck);
		printf("│        %s│\n", pattern);
		printf("└──────────┘\n");
		break;
	}
	case 10: {
		printf("\n");
		printf("┌──────────┐\n");
		printf("│%s        │\n", pattern);
		printf("│%d        │\n", cardInDeck);
		printf("│          │\n");
		printf("│          │\n");
		printf("│          │\n");
		printf("│        %d│\n", cardInDeck);
		printf("│        %s│\n", pattern);
		printf("└──────────┘\n");
		break;
	}
	case 11: {
		printf("\n");
		printf("┌──────────┐\n");
		printf("│%s        │\n", pattern);
		printf("│ %c        │\n", 'J');
		printf("│          │\n");
		printf("│          │\n");
		printf("│          │\n");
		printf("│         %c│\n", 'J');
		printf("│        %s│\n", pattern);
		printf("└──────────┘\n");
		break;
	}
	case 12: {
		printf("\n");
		printf("┌──────────┐\n");
		printf("│%s        │\n", pattern);
		printf("│ %c        │\n", 'Q');
		printf("│          │\n");
		printf("│          │\n");
		printf("│          │\n");
		printf("│         %c│\n", 'Q');
		printf("│        %s│\n", pattern);
		printf("└──────────┘\n");
		break;
	}
	case 13: {
		printf("\n");
		printf("┌──────────┐\n");
		printf("│%s        │\n", pattern);
		printf("│ %c        │\n", 'K');
		printf("│          │\n");
		printf("│          │\n");
		printf("│          │\n");
		printf("│         %c│\n", 'K');
		printf("│        %s│\n", pattern);
		printf("└──────────┘\n");
		break;
	}
	}
}
